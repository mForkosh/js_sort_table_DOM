{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CC4BA,AAzBuB,AADT,SAAS,aAAa,CAAC,SACR,aAAa,CAAC,SAyB5B,gBAAgB,CAAC,QAAS,SAAU,CAAS,EACzB,OAA7B,EAAU,MAAM,CAAC,OAAO,EAC1B,AAzBJ,SAAsB,CAAY,CAAE,CAAc,EAChD,GAAI,AAAyB,UAAzB,EAAa,OAAO,CAAc,CACpC,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAiB,EAAG,EAAM,QAAQ,EAExC,EAAc,IAAI,CAAC,SAAC,CAAA,CAAM,CAA1B,EACE,IAAM,EAAS,EAAK,QAAQ,CAAC,EAAe,CAAC,WAAW,CAClD,EAAS,EAAK,QAAQ,CAAC,EAAe,CAAC,WAAW,CAExD,GAAI,AAAmB,IAAnB,GAAwB,AAAmB,IAAnB,EAAsB,CAChD,IAAM,EAAc,EAAO,UAAU,CAAC,IAAK,IAAI,UAAU,CAAC,IAAK,IACzD,EAAc,EAAO,UAAU,CAAC,IAAK,IAAI,UAAU,CAAC,IAAK,IAE/D,OAAO,SAAS,GAAe,SAAS,EAC1C,CAEA,OAAO,EAAO,aAAa,CAAC,EAC9B,GAEA,AAAA,EAAM,MAAM,CAAZ,KAAA,CAAA,EAAa,EAAG,GAClB,CACF,EAIiB,IAAI,CAAC,aAAa,CAAE,EAAU,MAAM,CAAC,SAAS,CAE/D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar theadFromTable = table.querySelector(\"thead\");\nfunction sortForTable(tableForSort, tableCellIndex) {\n    if (tableForSort.tagName === \"TABLE\") {\n        var _tBody;\n        var tBody = document.querySelector(\"tbody\");\n        var rowsFromTbody = _to_consumable_array(tBody.children);\n        rowsFromTbody.sort(function(row1, row2) {\n            var value1 = row1.children[tableCellIndex].textContent;\n            var value2 = row2.children[tableCellIndex].textContent;\n            if (tableCellIndex === 2 || tableCellIndex === 3) {\n                var clearValue1 = value1.replaceAll(\",\", \"\").replaceAll(\"$\", \"\");\n                var clearValue2 = value2.replaceAll(\",\", \"\").replaceAll(\"$\", \"\");\n                return parseInt(clearValue1) - parseInt(clearValue2);\n            }\n            return value1.localeCompare(value2);\n        });\n        (_tBody = tBody).append.apply(_tBody, _to_consumable_array(rowsFromTbody));\n    }\n}\ntheadFromTable.addEventListener(\"click\", function(eventData) {\n    if (eventData.target.tagName === \"TH\") sortForTable(this.parentElement, eventData.target.cellIndex);\n});\n\n//# sourceMappingURL=index.78a38118.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst theadFromTable = table.querySelector('thead');\n\nfunction sortForTable(tableForSort, tableCellIndex) {\n  if (tableForSort.tagName === 'TABLE') {\n    const tBody = document.querySelector('tbody');\n    const rowsFromTbody = [...tBody.children];\n\n    rowsFromTbody.sort((row1, row2) => {\n      const value1 = row1.children[tableCellIndex].textContent;\n      const value2 = row2.children[tableCellIndex].textContent;\n\n      if (tableCellIndex === 2 || tableCellIndex === 3) {\n        const clearValue1 = value1.replaceAll(',', '').replaceAll('$', '');\n        const clearValue2 = value2.replaceAll(',', '').replaceAll('$', '');\n\n        return parseInt(clearValue1) - parseInt(clearValue2);\n      }\n\n      return value1.localeCompare(value2);\n    });\n\n    tBody.append(...rowsFromTbody);\n  }\n}\n\ntheadFromTable.addEventListener('click', function (eventData) {\n  if (eventData.target.tagName === 'TH') {\n    sortForTable(this.parentElement, eventData.target.cellIndex);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","theadFromTable","table","document","querySelector","addEventListener","eventData","target","tagName","sortForTable","tableForSort","tableCellIndex","tBody","rowsFromTbody","children","sort","row1","row2","value1","textContent","value2","clearValue1","replaceAll","clearValue2","parseInt","localeCompare","append","apply","parentElement","cellIndex"],"version":3,"file":"index.78a38118.js.map"}